-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.3
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity lstm_n5_16s_16b_ldEe_rom is 
    generic(
             dwidth     : integer := 13; 
             awidth     : integer := 10; 
             mem_size    : integer := 1024
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          addr1      : in std_logic_vector(awidth-1 downto 0); 
          ce1       : in std_logic; 
          q1         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of lstm_n5_16s_16b_ldEe_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
signal addr1_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "0000000000000", 1 => "0000000100000", 2 => "0000001000000", 
    3 => "0000001100000", 4 => "0000010000000", 5 => "0000010100000", 
    6 => "0000011000000", 7 => "0000011100000", 8 => "0000100000000", 
    9 => "0000100100000", 10 => "0000100111111", 11 => "0000101011111", 
    12 => "0000101111111", 13 => "0000110011111", 14 => "0000110111110", 
    15 => "0000111011110", 16 => "0000111111101", 17 => "0001000011101", 
    18 => "0001000111100", 19 => "0001001011100", 20 => "0001001111011", 
    21 => "0001010011010", 22 => "0001010111001", 23 => "0001011011000", 
    24 => "0001011110111", 25 => "0001100010110", 26 => "0001100110101", 
    27 => "0001101010011", 28 => "0001101110010", 29 => "0001110010000", 
    30 => "0001110101111", 31 => "0001111001101", 32 => "0001111101011", 
    33 => "0010000001001", 34 => "0010000100111", 35 => "0010001000101", 
    36 => "0010001100011", 37 => "0010010000000", 38 => "0010010011101", 
    39 => "0010010111011", 40 => "0010011011000", 41 => "0010011110101", 
    42 => "0010100010010", 43 => "0010100101110", 44 => "0010101001011", 
    45 => "0010101100111", 46 => "0010110000100", 47 => "0010110100000", 
    48 => "0010110111100", 49 => "0010111011000", 50 => "0010111110011", 
    51 => "0011000001111", 52 => "0011000101010", 53 => "0011001000101", 
    54 => "0011001100000", 55 => "0011001111011", 56 => "0011010010110", 
    57 => "0011010110000", 58 => "0011011001011", 59 => "0011011100101", 
    60 => "0011011111111", 61 => "0011100011001", 62 => "0011100110010", 
    63 => "0011101001100", 64 => "0011101100101", 65 => "0011101111110", 
    66 => "0011110010111", 67 => "0011110110000", 68 => "0011111001000", 
    69 => "0011111100000", 70 => "0011111111001", 71 => "0100000010000", 
    72 => "0100000101000", 73 => "0100001000000", 74 => "0100001010111", 
    75 => "0100001101110", 76 => "0100010000101", 77 => "0100010011100", 
    78 => "0100010110011", 79 => "0100011001001", 80 => "0100011100000", 
    81 => "0100011110110", 82 => "0100100001100", 83 => "0100100100001", 
    84 => "0100100110111", 85 => "0100101001100", 86 => "0100101100001", 
    87 => "0100101110110", 88 => "0100110001011", 89 => "0100110011111", 
    90 => "0100110110100", 91 => "0100111001000", 92 => "0100111011100", 
    93 => "0100111101111", 94 => "0101000000011", 95 => "0101000010110", 
    96 => "0101000101010", 97 => "0101000111101", 98 => "0101001001111", 
    99 => "0101001100010", 100 => "0101001110100", 101 => "0101010000111", 
    102 => "0101010011001", 103 => "0101010101011", 104 => "0101010111100", 
    105 => "0101011001110", 106 => "0101011011111", 107 => "0101011110000", 
    108 => "0101100000001", 109 => "0101100010010", 110 => "0101100100011", 
    111 => "0101100110011", 112 => "0101101000011", 113 => "0101101010011", 
    114 => "0101101100011", 115 => "0101101110011", 116 => "0101110000010", 
    117 => "0101110010010", 118 => "0101110100001", 119 => "0101110110000", 
    120 => "0101110111111", 121 => "0101111001101", 122 => "0101111011100", 
    123 => "0101111101010", 124 => "0101111111000", 125 => "0110000000110", 
    126 => "0110000010100", 127 => "0110000100010", 128 => "0110000101111", 
    129 => "0110000111101", 130 => "0110001001010", 131 => "0110001010111", 
    132 => "0110001100100", 133 => "0110001110001", 134 => "0110001111101", 
    135 => "0110010001010", 136 => "0110010010110", 137 => "0110010100010", 
    138 => "0110010101110", 139 => "0110010111010", 140 => "0110011000110", 
    141 => "0110011010001", 142 => "0110011011101", 143 => "0110011101000", 
    144 => "0110011110011", 145 => "0110011111110", 146 => "0110100001001", 
    147 => "0110100010011", 148 => "0110100011110", 149 => "0110100101000", 
    150 => "0110100110011", 151 => "0110100111101", 152 => "0110101000111", 
    153 => "0110101010001", 154 => "0110101011011", 155 => "0110101100100", 
    156 => "0110101101110", 157 => "0110101110111", 158 => "0110110000000", 
    159 => "0110110001010", 160 => "0110110010011", 161 => "0110110011011", 
    162 => "0110110100100", 163 => "0110110101101", 164 => "0110110110110", 
    165 => "0110110111110", 166 => "0110111000110", 167 => "0110111001111", 
    168 => "0110111010111", 169 => "0110111011111", 170 => "0110111100111", 
    171 => "0110111101110", 172 => "0110111110110", 173 => "0110111111110", 
    174 => "0111000000101", 175 => "0111000001100", 176 => "0111000010100", 
    177 => "0111000011011", 178 => "0111000100010", 179 => "0111000101001", 
    180 => "0111000110000", 181 => "0111000110111", 182 => "0111000111101", 
    183 => "0111001000100", 184 => "0111001001011", 185 => "0111001010001", 
    186 => "0111001010111", 187 => "0111001011110", 188 => "0111001100100", 
    189 => "0111001101010", 190 => "0111001110000", 191 => "0111001110110", 
    192 => "0111001111011", 193 => "0111010000001", 194 => "0111010000111", 
    195 => "0111010001100", 196 => "0111010010010", 197 => "0111010010111", 
    198 => "0111010011101", 199 => "0111010100010", 200 => "0111010100111", 
    201 => "0111010101100", 202 => "0111010110001", 203 => "0111010110110", 
    204 => "0111010111011", 205 => "0111011000000", 206 => "0111011000101", 
    207 => "0111011001010", 208 => "0111011001110", 209 => "0111011010011", 
    210 => "0111011010111", 211 => "0111011011100", 212 => "0111011100000", 
    213 => "0111011100100", 214 => "0111011101001", 215 => "0111011101101", 
    216 => "0111011110001", 217 => "0111011110101", 218 => "0111011111001", 
    219 => "0111011111101", 220 => "0111100000001", 221 => "0111100000101", 
    222 => "0111100001000", 223 => "0111100001100", 224 => "0111100010000", 
    225 => "0111100010011", 226 => "0111100010111", 227 => "0111100011011", 
    228 => "0111100011110", 229 => "0111100100001", 230 => "0111100100101", 
    231 => "0111100101000", 232 => "0111100101011", 233 => "0111100101111", 
    234 => "0111100110010", 235 => "0111100110101", 236 => "0111100111000", 
    237 => "0111100111011", 238 => "0111100111110", 239 => "0111101000001", 
    240 => "0111101000100", 241 => "0111101000111", 242 => "0111101001001", 
    243 => "0111101001100", 244 => "0111101001111", 245 => "0111101010010", 
    246 => "0111101010100", 247 => "0111101010111", 248 => "0111101011001", 
    249 => "0111101011100", 250 => "0111101011110", 251 => "0111101100001", 
    252 => "0111101100011", 253 => "0111101100110", 254 => "0111101101000", 
    255 => "0111101101010", 256 => "0111101101101", 257 => "0111101101111", 
    258 => "0111101110001", 259 => "0111101110011", 260 => "0111101110101", 
    261 => "0111101111000", 262 => "0111101111010", 263 => "0111101111100", 
    264 => "0111101111110", 265 => "0111110000000", 266 => "0111110000010", 
    267 => "0111110000100", 268 => "0111110000101", 269 => "0111110000111", 
    270 => "0111110001001", 271 => "0111110001011", 272 => "0111110001101", 
    273 => "0111110001111", 274 => "0111110010000", 275 => "0111110010010", 
    276 => "0111110010100", 277 => "0111110010101", 278 => "0111110010111", 
    279 => "0111110011001", 280 => "0111110011010", 281 => "0111110011100", 
    282 => "0111110011101", 283 => "0111110011111", 284 => "0111110100000", 
    285 => "0111110100010", 286 => "0111110100011", 287 => "0111110100101", 
    288 => "0111110100110", 289 => "0111110100111", 290 => "0111110101001", 
    291 => "0111110101010", 292 => "0111110101011", 293 => "0111110101101", 
    294 => "0111110101110", 295 => "0111110101111", 296 => "0111110110000", 
    297 => "0111110110010", 298 => "0111110110011", 299 => "0111110110100", 
    300 => "0111110110101", 301 => "0111110110110", 302 => "0111110111000", 
    303 => "0111110111001", 304 => "0111110111010", 305 => "0111110111011", 
    306 => "0111110111100", 307 => "0111110111101", 308 => "0111110111110", 
    309 => "0111110111111", 310 => "0111111000000", 311 => "0111111000001", 
    312 => "0111111000010", 313 => "0111111000011", 314 => "0111111000100", 
    315 => "0111111000101", 316 => "0111111000110", 317 to 318=> "0111111000111", 
    319 => "0111111001000", 320 => "0111111001001", 321 => "0111111001010", 
    322 => "0111111001011", 323 to 324=> "0111111001100", 325 => "0111111001101", 
    326 => "0111111001110", 327 => "0111111001111", 328 to 329=> "0111111010000", 
    330 => "0111111010001", 331 to 332=> "0111111010010", 333 => "0111111010011", 
    334 => "0111111010100", 335 to 336=> "0111111010101", 337 => "0111111010110", 
    338 to 339=> "0111111010111", 340 to 341=> "0111111011000", 342 => "0111111011001", 
    343 to 344=> "0111111011010", 345 to 346=> "0111111011011", 347 => "0111111011100", 
    348 to 349=> "0111111011101", 350 to 351=> "0111111011110", 352 to 353=> "0111111011111", 
    354 to 355=> "0111111100000", 356 to 357=> "0111111100001", 358 to 359=> "0111111100010", 
    360 to 362=> "0111111100011", 363 to 364=> "0111111100100", 365 to 366=> "0111111100101", 
    367 to 369=> "0111111100110", 370 to 371=> "0111111100111", 372 to 374=> "0111111101000", 
    375 to 377=> "0111111101001", 378 to 380=> "0111111101010", 381 to 383=> "0111111101011", 
    384 to 386=> "0111111101100", 387 to 389=> "0111111101101", 390 to 393=> "0111111101110", 
    394 to 397=> "0111111101111", 398 to 401=> "0111111110000", 402 to 405=> "0111111110001", 
    406 to 410=> "0111111110010", 411 to 414=> "0111111110011", 415 to 420=> "0111111110100", 
    421 to 426=> "0111111110101", 427 to 432=> "0111111110110", 433 to 439=> "0111111110111", 
    440 to 447=> "0111111111000", 448 to 456=> "0111111111001", 457 to 467=> "0111111111010", 
    468 to 480=> "0111111111011", 481 to 496=> "0111111111100", 497 to 518=> "0111111111101", 
    519 to 550=> "0111111111110", 551 to 621=> "0111111111111", 622 to 1023=> "1000000000000" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

memory_access_guard_1: process (addr1) 
begin
      addr1_tmp <= addr1;
--synthesis translate_off
      if (CONV_INTEGER(addr1) > mem_size-1) then
           addr1_tmp <= (others => '0');
      else 
           addr1_tmp <= addr1;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
        if (ce1 = '1') then 
            q1 <= mem(CONV_INTEGER(addr1_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity lstm_n5_16s_16b_ldEe is
    generic (
        DataWidth : INTEGER := 13;
        AddressRange : INTEGER := 1024;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address1 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of lstm_n5_16s_16b_ldEe is
    component lstm_n5_16s_16b_ldEe_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR;
            addr1 : IN STD_LOGIC_VECTOR;
            ce1 : IN STD_LOGIC;
            q1 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    lstm_n5_16s_16b_ldEe_rom_U :  component lstm_n5_16s_16b_ldEe_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0,
        addr1 => address1,
        ce1 => ce1,
        q1 => q1);

end architecture;


