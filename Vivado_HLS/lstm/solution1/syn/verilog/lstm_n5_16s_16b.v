// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lstm_n5_16s_16b,hls_ip_2017_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2104-2L-e-es1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.432750,HLS_SYN_LAT=185,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=12,HLS_SYN_FF=564,HLS_SYN_LUT=2201}" *)

module lstm_n5_16s_16b (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ch_ena,
        sampleinput,
        weight_Addr_A,
        weight_EN_A,
        weight_WEN_A,
        weight_Din_A,
        weight_Dout_A,
        weight_Clk_A,
        weight_Rst_A,
        lstm_out,
        lstm_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_pp0_stage0 = 25'd32;
parameter    ap_ST_fsm_pp0_stage1 = 25'd64;
parameter    ap_ST_fsm_pp0_stage2 = 25'd128;
parameter    ap_ST_fsm_pp0_stage3 = 25'd256;
parameter    ap_ST_fsm_state11 = 25'd512;
parameter    ap_ST_fsm_pp1_stage0 = 25'd1024;
parameter    ap_ST_fsm_pp1_stage1 = 25'd2048;
parameter    ap_ST_fsm_pp1_stage2 = 25'd4096;
parameter    ap_ST_fsm_pp1_stage3 = 25'd8192;
parameter    ap_ST_fsm_state17 = 25'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 25'd32768;
parameter    ap_ST_fsm_pp2_stage1 = 25'd65536;
parameter    ap_ST_fsm_pp2_stage2 = 25'd131072;
parameter    ap_ST_fsm_pp2_stage3 = 25'd262144;
parameter    ap_ST_fsm_state25 = 25'd524288;
parameter    ap_ST_fsm_pp3_stage0 = 25'd1048576;
parameter    ap_ST_fsm_state29 = 25'd2097152;
parameter    ap_ST_fsm_state30 = 25'd4194304;
parameter    ap_ST_fsm_pp4_stage0 = 25'd8388608;
parameter    ap_ST_fsm_state33 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [3:0] ch_ena;
input  [23:0] sampleinput;
output  [31:0] weight_Addr_A;
output   weight_EN_A;
output  [3:0] weight_WEN_A;
output  [31:0] weight_Din_A;
input  [31:0] weight_Dout_A;
output   weight_Clk_A;
output   weight_Rst_A;
output  [15:0] lstm_out;
output   lstm_out_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weight_EN_A;
reg lstm_out_ap_vld;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] h_state_address0;
reg    h_state_ce0;
reg    h_state_we0;
wire   [15:0] h_state_d0;
wire  signed [15:0] h_state_q0;
reg   [9:0] lut_sigmoid_address0;
reg    lut_sigmoid_ce0;
wire   [11:0] lut_sigmoid_q0;
reg   [9:0] lut_sigmoid_address1;
reg    lut_sigmoid_ce1;
wire   [11:0] lut_sigmoid_q1;
reg   [9:0] lut_tanh_address0;
reg    lut_tanh_ce0;
wire   [12:0] lut_tanh_q0;
wire   [9:0] lut_tanh_address1;
reg    lut_tanh_ce1;
wire   [12:0] lut_tanh_q1;
wire   [6:0] c_state_address0;
reg    c_state_ce0;
wire  signed [15:0] c_state_q0;
reg    c_state_ce1;
reg    c_state_we1;
wire   [15:0] c_state_d1;
reg   [2:0] j_reg_679;
reg   [4:0] indvar_flatten_reg_691;
reg   [2:0] j_1_reg_702;
reg   [2:0] i_reg_713;
reg   [2:0] j_2_reg_724;
reg   [2:0] j_3_reg_736;
reg   [2:0] j_4_reg_747;
reg   [31:0] lstm_output_0_in_reg_758;
wire   [2:0] indvarinc_fu_773_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] indvarinc1_fu_790_p2;
wire    ap_CS_fsm_state3;
wire   [2:0] indvarinc2_fu_807_p2;
wire    ap_CS_fsm_state4;
wire   [2:0] indvarinc3_fu_824_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_7_fu_835_p2;
wire  signed [30:0] tmp_10_cast_fu_860_p1;
reg  signed [30:0] tmp_10_cast_reg_2162;
wire   [0:0] exitcond5_fu_864_p2;
reg   [0:0] exitcond5_reg_2170;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] j_5_fu_870_p2;
reg   [2:0] j_5_reg_2174;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] tmp_10_fu_876_p1;
reg   [63:0] tmp_10_reg_2179;
wire   [3:0] j_cast_fu_885_p1;
reg   [3:0] j_cast_reg_2192;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state7_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [4:0] tmp_26_fu_918_p2;
reg   [4:0] tmp_26_reg_2202;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state8_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state9_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [6:0] tmp_14_fu_1006_p2;
reg   [6:0] tmp_14_reg_2217;
wire    ap_CS_fsm_state11;
wire   [0:0] exitcond_flatten_fu_1030_p2;
reg   [0:0] exitcond_flatten_reg_2224;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [4:0] indvar_flatten_next_fu_1036_p2;
reg   [4:0] indvar_flatten_next_reg_2228;
reg    ap_enable_reg_pp1_iter0;
wire   [2:0] i_mid2_fu_1054_p3;
reg   [2:0] i_mid2_reg_2233;
wire   [4:0] tmp_39_cast1_mid2_v_fu_1080_p3;
reg   [4:0] tmp_39_cast1_mid2_v_reg_2239;
wire   [2:0] tmp_35_mid2_v_fu_1092_p3;
reg   [2:0] tmp_35_mid2_v_reg_2244;
wire   [6:0] i_cast_fu_1108_p1;
reg   [6:0] i_cast_reg_2249;
reg   [2:0] i_state_addr_2_reg_2265;
reg   [2:0] f_state_addr_2_reg_2270;
reg   [2:0] o_state_addr_2_reg_2275;
reg   [2:0] g_state_addr_2_reg_2280;
wire   [6:0] tmp_39_cast1_mid2_fu_1147_p1;
reg   [6:0] tmp_39_cast1_mid2_reg_2285;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state13_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
wire  signed [27:0] tmp_51_cast_fu_1153_p1;
reg  signed [27:0] tmp_51_cast_reg_2291;
wire   [2:0] i_1_fu_1202_p2;
reg   [2:0] i_1_reg_2303;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state14_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [6:0] tmp_67_fu_1251_p2;
reg   [6:0] tmp_67_reg_2313;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_state15_pp1_stage3_iter0;
wire    ap_block_pp1_stage3_11001;
wire   [0:0] exitcond2_fu_1308_p2;
reg   [0:0] exitcond2_reg_2323;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state18_pp2_stage0_iter0;
wire    ap_block_state22_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] ap_reg_pp2_iter1_exitcond2_reg_2323;
wire   [2:0] j_9_fu_1314_p2;
reg   [2:0] j_9_reg_2327;
reg    ap_enable_reg_pp2_iter0;
wire   [7:0] j_2_cast_fu_1320_p1;
reg   [7:0] j_2_cast_reg_2332;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state19_pp2_stage1_iter0;
wire    ap_block_state23_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
wire   [3:0] tmp_37_fu_1324_p3;
reg   [3:0] tmp_37_reg_2338;
reg   [2:0] i_state_addr_3_reg_2343;
reg   [2:0] ap_reg_pp2_iter1_i_state_addr_3_reg_2343;
reg   [2:0] f_state_addr_4_reg_2353;
reg   [2:0] o_state_addr_4_reg_2358;
reg   [2:0] g_state_addr_4_reg_2363;
reg   [2:0] ap_reg_pp2_iter1_g_state_addr_4_reg_2363;
reg   [0:0] tmp_78_reg_2368;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state20_pp2_stage2_iter0;
wire    ap_block_state24_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_11001;
wire   [0:0] tmp_80_fu_1388_p2;
reg   [0:0] tmp_80_reg_2379;
reg   [0:0] tmp_91_reg_2394;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state21_pp2_stage3_iter0;
wire    ap_block_pp2_stage3_11001;
wire   [0:0] tmp_97_fu_1484_p2;
reg   [0:0] tmp_97_reg_2405;
wire   [10:0] tmp_109_fu_1561_p4;
reg   [10:0] tmp_109_reg_2425;
reg   [0:0] tmp_111_reg_2431;
reg   [0:0] tmp_75_reg_2442;
wire   [0:0] tmp_47_fu_1625_p2;
reg   [0:0] tmp_47_reg_2453;
reg   [12:0] lut_tanh_load_2_reg_2463;
reg    ap_enable_reg_pp2_iter1;
wire   [0:0] tmp_113_fu_1650_p2;
reg   [0:0] tmp_113_reg_2468;
wire   [0:0] exitcond1_fu_1734_p2;
reg   [0:0] exitcond1_reg_2478;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state26_pp3_stage0_iter0;
wire    ap_block_state27_pp3_stage0_iter1;
wire    ap_block_state28_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] ap_reg_pp3_iter1_exitcond1_reg_2478;
wire   [2:0] j_8_fu_1740_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [63:0] tmp_128_cast1_fu_1763_p1;
reg   [63:0] tmp_128_cast1_reg_2487;
reg   [63:0] ap_reg_pp3_iter1_tmp_128_cast1_reg_2487;
reg   [6:0] c_state_addr_reg_2492;
wire   [0:0] icmp_fu_1843_p2;
reg   [0:0] icmp_reg_2518;
reg   [0:0] tmp_120_reg_2524;
wire   [0:0] tmp_127_fu_1862_p2;
reg   [0:0] tmp_127_reg_2535;
wire   [15:0] o_state_q0;
reg  signed [15:0] o_state_load_1_reg_2545;
reg    ap_enable_reg_pp3_iter1;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire   [0:0] exitcond_fu_1957_p2;
reg   [0:0] exitcond_reg_2560;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state31_pp4_stage0_iter0;
wire    ap_block_state32_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [2:0] j_7_fu_1963_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [15:0] lstm_output_fu_1998_p1;
reg   [15:0] lstm_output_reg_2579;
reg    ap_enable_reg_pp4_iter1;
wire  signed [31:0] tmp_129_cast_fu_2037_p1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage3_subdone;
wire    ap_CS_fsm_state17;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state18;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp2_stage2_subdone;
wire    ap_CS_fsm_state25;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state26;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage0_subdone;
reg   [2:0] i_state_address0;
reg    i_state_ce0;
reg    i_state_we0;
reg   [15:0] i_state_d0;
wire  signed [15:0] i_state_q0;
reg   [2:0] f_state_address0;
reg    f_state_ce0;
reg    f_state_we0;
reg   [15:0] f_state_d0;
wire  signed [15:0] f_state_q0;
reg   [2:0] o_state_address0;
reg    o_state_ce0;
reg    o_state_we0;
reg   [15:0] o_state_d0;
reg   [2:0] g_state_address0;
reg    g_state_ce0;
reg    g_state_we0;
reg   [15:0] g_state_d0;
wire  signed [15:0] g_state_q0;
reg   [2:0] invdar_reg_635;
wire   [0:0] tmp_1_fu_784_p2;
reg   [2:0] invdar1_reg_646;
wire   [0:0] tmp_3_fu_801_p2;
reg   [2:0] invdar2_reg_657;
wire   [0:0] tmp_5_fu_818_p2;
reg   [2:0] invdar3_reg_668;
reg   [2:0] ap_phi_mux_j_phi_fu_683_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_695_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_j_1_phi_fu_706_p4;
reg   [2:0] ap_phi_mux_i_phi_fu_717_p4;
reg   [2:0] ap_phi_mux_j_2_phi_fu_728_p4;
wire    ap_block_pp2_stage0;
wire   [63:0] tmp_fu_779_p1;
wire   [63:0] tmp_2_fu_796_p1;
wire   [63:0] tmp_4_fu_813_p1;
wire   [63:0] tmp_6_fu_830_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_16_fu_913_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_22_fu_947_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_27_fu_970_p1;
wire   [63:0] tmp_34_cast_fu_1121_p1;
wire   [63:0] tmp_35_fu_1142_p1;
wire   [63:0] tmp_35_mid2_fu_1100_p1;
wire   [63:0] tmp_54_fu_1197_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] tmp_61_fu_1241_p1;
wire    ap_block_pp1_stage2;
wire   [63:0] tmp_68_fu_1280_p1;
wire    ap_block_pp1_stage3;
wire   [63:0] tmp_40_fu_1332_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] tmp_56_fu_1346_p1;
wire   [63:0] tmp_79_fu_1383_p1;
wire    ap_block_pp2_stage2;
wire   [63:0] tmp_82_fu_1408_p1;
wire   [63:0] tmp_85_fu_1418_p1;
wire   [63:0] tmp_93_fu_1479_p1;
wire    ap_block_pp2_stage3;
wire   [63:0] tmp_101_fu_1504_p1;
wire   [63:0] tmp_106_fu_1514_p1;
wire   [63:0] tmp_38_fu_1522_p1;
wire   [63:0] tmp_112_fu_1583_p1;
wire   [63:0] tmp_46_fu_1620_p1;
wire   [63:0] tmp_49_fu_1645_p1;
wire   [63:0] tmp_115_fu_1668_p1;
wire    ap_block_pp3_stage0;
wire   [63:0] tmp_89_fu_1746_p1;
wire   [63:0] tmp_124_fu_1857_p1;
wire   [63:0] tmp_130_fu_1878_p1;
wire   [63:0] tmp_138_cast1_fu_1982_p1;
wire    ap_block_pp4_stage0;
wire   [63:0] tmp_123_fu_1993_p1;
wire    ap_CS_fsm_state33;
wire   [15:0] tmp_50_fu_1174_p2;
wire   [15:0] storemerge_cast_fu_1692_p1;
wire   [15:0] tmp_59_fu_1224_p2;
wire   [15:0] storemerge2_cast_fu_1442_p1;
wire   [15:0] tmp_66_fu_1273_p2;
wire   [15:0] storemerge3_cast_fu_1546_p1;
wire   [15:0] tmp_72_fu_1301_p2;
wire  signed [15:0] storemerge4_cast_fu_1729_p1;
reg   [31:0] weight_Addr_A_orig;
wire   [18:0] tmp_8_fu_841_p1;
wire   [18:0] tmp_9_fu_844_p2;
wire   [15:0] sampleinput_16b_fu_850_p4;
wire  signed [15:0] tmp_17_fu_889_p1;
wire  signed [30:0] tmp_12_fu_2041_p2;
wire   [3:0] tmp_15_fu_907_p2;
wire   [4:0] j_cast1_fu_881_p1;
wire  signed [15:0] tmp_20_fu_924_p1;
wire  signed [30:0] tmp_18_fu_2047_p2;
wire   [3:0] tmp_21_fu_942_p2;
wire  signed [15:0] tmp_23_fu_952_p1;
wire  signed [30:0] tmp_24_fu_2053_p2;
wire  signed [15:0] tmp_28_fu_974_p1;
wire  signed [30:0] tmp_29_fu_2059_p2;
wire   [5:0] tmp_11_fu_995_p3;
wire   [6:0] tmp_8_cast_fu_992_p1;
wire   [6:0] p_shl1_cast_fu_1002_p1;
wire   [4:0] j_1_cast_fu_1012_p1;
wire   [4:0] p_shl_fu_1016_p3;
wire   [0:0] exitcond3_fu_1048_p2;
wire   [2:0] j_6_fu_1042_p2;
wire   [4:0] j_1_cast_mid1_fu_1062_p1;
wire   [4:0] p_shl_mid1_fu_1066_p3;
wire   [4:0] tmp_34_mid1_fu_1074_p2;
wire   [4:0] tmp_31_fu_1024_p2;
wire   [6:0] tmp_33_fu_1116_p2;
wire   [4:0] i_cast2_fu_1112_p1;
wire   [4:0] tmp1_fu_1126_p2;
wire   [5:0] tmp_39_cast_mid2_fu_1088_p1;
wire   [5:0] tmp26_cast_fu_1132_p1;
wire   [5:0] tmp_34_fu_1136_p2;
wire  signed [15:0] tmp_39_fu_1157_p1;
wire  signed [27:0] tmp_42_fu_2065_p2;
wire   [15:0] tmp_45_fu_1165_p4;
wire   [5:0] i_cast1_fu_1150_p1;
wire   [5:0] tmp2_fu_1181_p2;
wire   [6:0] tmp27_cast_fu_1187_p1;
wire   [6:0] tmp_53_fu_1191_p2;
wire  signed [15:0] tmp_55_fu_1207_p1;
wire  signed [27:0] tmp_57_fu_2072_p2;
wire   [15:0] tmp_58_fu_1215_p4;
wire   [6:0] tmp3_fu_1231_p2;
wire   [6:0] tmp_60_fu_1236_p2;
wire   [6:0] tmp4_fu_1246_p2;
wire  signed [15:0] tmp_62_fu_1256_p1;
wire  signed [27:0] tmp_63_fu_2078_p2;
wire   [15:0] tmp_64_fu_1264_p4;
wire  signed [15:0] tmp_69_fu_1284_p1;
wire  signed [27:0] tmp_70_fu_2084_p2;
wire   [15:0] tmp_71_fu_1292_p4;
wire   [7:0] tmp_52_fu_1340_p2;
wire   [15:0] tmp_76_fu_1351_p1;
wire   [15:0] tmp_65_fu_1355_p2;
wire   [10:0] tmp_74_fu_1361_p4;
wire  signed [15:0] tmp_77_fu_1371_p1;
wire  signed [11:0] tmp_144_cast_fu_1394_p1;
wire   [11:0] tmp_81_fu_1398_p2;
wire  signed [31:0] tmp_145_cast_fu_1404_p1;
wire   [7:0] tmp_84_fu_1413_p2;
wire   [11:0] grp_fu_767_p2;
wire   [0:0] sel_tmp6_fu_1430_p2;
wire   [11:0] sel_tmp4_fu_1423_p3;
wire   [11:0] storemerge2_fu_1434_p3;
wire   [15:0] tmp_86_fu_1447_p1;
wire   [15:0] tmp_87_fu_1451_p2;
wire   [10:0] tmp_88_fu_1457_p4;
wire  signed [15:0] tmp_90_fu_1467_p1;
wire  signed [11:0] tmp_159_cast_fu_1490_p1;
wire   [11:0] tmp_99_fu_1494_p2;
wire  signed [31:0] tmp_160_cast_fu_1500_p1;
wire   [7:0] tmp_105_fu_1509_p2;
wire  signed [6:0] tmp_41_cast_fu_1519_p1;
wire   [0:0] sel_tmp3_fu_1534_p2;
wire   [11:0] sel_tmp8_fu_1527_p3;
wire   [11:0] storemerge3_fu_1538_p3;
wire   [15:0] tmp_107_fu_1551_p1;
wire   [15:0] tmp_108_fu_1555_p2;
wire  signed [15:0] tmp_110_fu_1571_p1;
wire   [15:0] tmp_73_fu_1588_p1;
wire   [15:0] tmp_41_fu_1592_p2;
wire   [10:0] tmp_43_fu_1598_p4;
wire  signed [15:0] tmp_44_fu_1608_p1;
wire  signed [11:0] tmp_108_cast_fu_1631_p1;
wire   [11:0] tmp_48_fu_1635_p2;
wire  signed [31:0] tmp_109_cast_fu_1641_p1;
wire  signed [11:0] tmp_174_cast_fu_1655_p1;
wire   [11:0] tmp_114_fu_1658_p2;
wire  signed [31:0] tmp_175_cast_fu_1664_p1;
wire   [0:0] sel_tmp2_fu_1680_p2;
wire   [11:0] sel_tmp_fu_1673_p3;
wire   [11:0] storemerge_fu_1684_p3;
wire   [12:0] tmp_116_fu_1700_p2;
wire  signed [13:0] tmp_177_cast_fu_1706_p1;
wire   [13:0] lut_tanh_load_2_cast_fu_1697_p1;
wire   [0:0] sel_tmp1_fu_1717_p2;
wire   [13:0] sel_tmp7_fu_1710_p3;
wire   [13:0] storemerge4_fu_1721_p3;
wire   [6:0] tmp_89_cast_fu_1754_p1;
wire   [6:0] tmp_118_fu_1758_p2;
wire  signed [27:0] tmp_92_fu_2090_p2;
wire  signed [31:0] tmp_96_fu_2097_p2;
wire   [19:0] tmp_93_cast_fu_1776_p4;
wire   [19:0] tmp_97_cast_fu_1793_p4;
wire   [19:0] tmp_98_fu_1802_p2;
wire   [14:0] tmp_117_fu_1819_p4;
wire   [4:0] tmp_119_fu_1833_p4;
wire  signed [15:0] tmp_103_fu_1829_p1;
wire   [15:0] tmp_128_fu_1868_p2;
wire  signed [31:0] tmp_134_cast_fu_1874_p1;
wire   [12:0] tmp_131_fu_1887_p2;
wire   [0:0] sel_tmp13_demorgan_fu_1897_p2;
wire   [0:0] sel_tmp9_fu_1907_p2;
wire  signed [13:0] tmp_136_cast_fu_1893_p1;
wire   [13:0] lut_tanh_load_cast_fu_1883_p1;
wire   [0:0] sel_tmp5_fu_1901_p2;
wire   [0:0] or_cond_fu_1919_p2;
wire   [13:0] newSel_fu_1911_p3;
wire   [13:0] newSel1_fu_1925_p3;
wire  signed [13:0] newSel2_fu_1932_p3;
wire  signed [27:0] tmp_132_fu_2104_p2;
wire   [6:0] tmp_120_cast_fu_1973_p1;
wire   [6:0] tmp_135_fu_1977_p2;
wire   [7:0] j_4_cast_fu_1969_p1;
wire   [7:0] tmp_122_fu_1987_p2;
wire  signed [15:0] tmp_136_fu_2006_p1;
wire  signed [31:0] tmp_126_fu_2111_p2;
wire   [19:0] tmp_137_fu_2014_p4;
wire  signed [20:0] tmp_127_cast_fu_2023_p1;
wire  signed [20:0] tmp_128_cast_fu_2027_p1;
wire   [20:0] tmp_129_fu_2031_p2;
wire  signed [15:0] tmp_12_fu_2041_p1;
wire  signed [15:0] tmp_18_fu_2047_p1;
wire  signed [15:0] tmp_24_fu_2053_p1;
wire  signed [15:0] tmp_29_fu_2059_p1;
wire  signed [15:0] tmp_57_fu_2072_p1;
wire  signed [15:0] tmp_63_fu_2078_p1;
wire  signed [15:0] tmp_70_fu_2084_p1;
reg   [24:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp2_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
end

lstm_n5_16s_16b_hbkb #(
    .DataWidth( 16 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
h_state_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(h_state_address0),
    .ce0(h_state_ce0),
    .we0(h_state_we0),
    .d0(h_state_d0),
    .q0(h_state_q0)
);

lstm_n5_16s_16b_lcud #(
    .DataWidth( 12 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
lut_sigmoid_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_sigmoid_address0),
    .ce0(lut_sigmoid_ce0),
    .q0(lut_sigmoid_q0),
    .address1(lut_sigmoid_address1),
    .ce1(lut_sigmoid_ce1),
    .q1(lut_sigmoid_q1)
);

lstm_n5_16s_16b_ldEe #(
    .DataWidth( 13 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
lut_tanh_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_tanh_address0),
    .ce0(lut_tanh_ce0),
    .q0(lut_tanh_q0),
    .address1(lut_tanh_address1),
    .ce1(lut_tanh_ce1),
    .q1(lut_tanh_q1)
);

lstm_n5_16s_16b_ceOg #(
    .DataWidth( 16 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
c_state_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(c_state_address0),
    .ce0(c_state_ce0),
    .q0(c_state_q0),
    .address1(c_state_addr_reg_2492),
    .ce1(c_state_ce1),
    .we1(c_state_we1),
    .d1(c_state_d1)
);

lstm_n5_16s_16b_ifYi #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
i_state_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(i_state_address0),
    .ce0(i_state_ce0),
    .we0(i_state_we0),
    .d0(i_state_d0),
    .q0(i_state_q0)
);

lstm_n5_16s_16b_ifYi #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
f_state_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_state_address0),
    .ce0(f_state_ce0),
    .we0(f_state_we0),
    .d0(f_state_d0),
    .q0(f_state_q0)
);

lstm_n5_16s_16b_ifYi #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
o_state_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_state_address0),
    .ce0(o_state_ce0),
    .we0(o_state_we0),
    .d0(o_state_d0),
    .q0(o_state_q0)
);

lstm_n5_16s_16b_ifYi #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
g_state_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(g_state_address0),
    .ce0(g_state_ce0),
    .we0(g_state_we0),
    .d0(g_state_d0),
    .q0(g_state_q0)
);

lstm_n5_16s_16b_mjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
lstm_n5_16s_16b_mjbC_U1(
    .din0(tmp_17_fu_889_p1),
    .din1(tmp_12_fu_2041_p1),
    .dout(tmp_12_fu_2041_p2)
);

lstm_n5_16s_16b_mjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
lstm_n5_16s_16b_mjbC_U2(
    .din0(tmp_20_fu_924_p1),
    .din1(tmp_18_fu_2047_p1),
    .dout(tmp_18_fu_2047_p2)
);

lstm_n5_16s_16b_mjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
lstm_n5_16s_16b_mjbC_U3(
    .din0(tmp_23_fu_952_p1),
    .din1(tmp_24_fu_2053_p1),
    .dout(tmp_24_fu_2053_p2)
);

lstm_n5_16s_16b_mjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
lstm_n5_16s_16b_mjbC_U4(
    .din0(tmp_28_fu_974_p1),
    .din1(tmp_29_fu_2059_p1),
    .dout(tmp_29_fu_2059_p2)
);

lstm_n5_16s_16b_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
lstm_n5_16s_16b_mkbM_U5(
    .din0(tmp_39_fu_1157_p1),
    .din1(h_state_q0),
    .dout(tmp_42_fu_2065_p2)
);

lstm_n5_16s_16b_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
lstm_n5_16s_16b_mkbM_U6(
    .din0(tmp_55_fu_1207_p1),
    .din1(tmp_57_fu_2072_p1),
    .dout(tmp_57_fu_2072_p2)
);

lstm_n5_16s_16b_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
lstm_n5_16s_16b_mkbM_U7(
    .din0(tmp_62_fu_1256_p1),
    .din1(tmp_63_fu_2078_p1),
    .dout(tmp_63_fu_2078_p2)
);

lstm_n5_16s_16b_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
lstm_n5_16s_16b_mkbM_U8(
    .din0(tmp_69_fu_1284_p1),
    .din1(tmp_70_fu_2084_p1),
    .dout(tmp_70_fu_2084_p2)
);

lstm_n5_16s_16b_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
lstm_n5_16s_16b_mkbM_U9(
    .din0(c_state_q0),
    .din1(f_state_q0),
    .dout(tmp_92_fu_2090_p2)
);

lstm_n5_16s_16b_mlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
lstm_n5_16s_16b_mlbW_U10(
    .din0(g_state_q0),
    .din1(i_state_q0),
    .dout(tmp_96_fu_2097_p2)
);

lstm_n5_16s_16b_mmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 28 ))
lstm_n5_16s_16b_mmb6_U11(
    .din0(o_state_load_1_reg_2545),
    .din1(newSel2_fu_1932_p3),
    .dout(tmp_132_fu_2104_p2)
);

lstm_n5_16s_16b_mlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
lstm_n5_16s_16b_mlbW_U12(
    .din0(h_state_q0),
    .din1(tmp_136_fu_2006_p1),
    .dout(tmp_126_fu_2111_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_fu_835_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (((ap_block_pp0_stage3_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state6 ^ 1'b1);
        end else if ((((ap_block_pp0_stage3_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_fu_835_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((ap_block_pp1_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (((ap_block_pp1_stage3_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((ap_block_pp1_stage0_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0))))) begin
            ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state12 ^ 1'b1);
        end else if ((((ap_block_pp1_stage3_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((ap_block_pp1_stage0_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((ap_block_pp2_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state18) & (((ap_block_pp2_stage3_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((ap_block_pp2_stage2_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2))))) begin
            ap_enable_reg_pp2_iter1 <= (ap_condition_pp2_exit_iter0_state18 ^ 1'b1);
        end else if ((((ap_block_pp2_stage3_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((ap_block_pp2_stage2_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((ap_block_pp3_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp3_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp3_stage0_subdone == 1'b0)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state26)) begin
                ap_enable_reg_pp3_iter1 <= (ap_condition_pp3_exit_iter0_state26 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp3_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((ap_block_pp4_stage0_subdone == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'd1 == exitcond_fu_1957_p2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp4_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_reg_2224))) begin
        i_reg_713 <= i_1_reg_2303;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i_reg_713 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_reg_2224))) begin
        indvar_flatten_reg_691 <= indvar_flatten_next_reg_2228;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten_reg_691 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == tmp_1_fu_784_p2))) begin
        invdar1_reg_646 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == tmp_3_fu_801_p2))) begin
        invdar1_reg_646 <= indvarinc1_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == tmp_3_fu_801_p2))) begin
        invdar2_reg_657 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_5_fu_818_p2))) begin
        invdar2_reg_657 <= indvarinc2_fu_807_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == tmp_5_fu_818_p2))) begin
        invdar3_reg_668 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_fu_835_p2 == 1'd0))) begin
        invdar3_reg_668 <= indvarinc3_fu_824_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == tmp_1_fu_784_p2))) begin
        invdar_reg_635 <= indvarinc_fu_773_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_635 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_reg_2224))) begin
        j_1_reg_702 <= tmp_35_mid2_v_reg_2244;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        j_1_reg_702 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_2_reg_724 <= 3'd0;
    end else if (((ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond2_reg_2323))) begin
        j_2_reg_724 <= j_9_reg_2327;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        j_3_reg_736 <= 3'd0;
    end else if (((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'd0 == exitcond1_fu_1734_p2))) begin
        j_3_reg_736 <= j_8_fu_1740_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp4_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'd0 == exitcond_fu_1957_p2))) begin
        j_4_reg_747 <= j_7_fu_1963_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        j_4_reg_747 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond5_reg_2170 == 1'd0))) begin
        j_reg_679 <= j_5_reg_2174;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_fu_835_p2 == 1'd1))) begin
        j_reg_679 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp4_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'd0 == exitcond_reg_2560))) begin
        lstm_output_0_in_reg_758 <= tmp_129_cast_fu_2037_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        lstm_output_0_in_reg_758 <= weight_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_reg_pp2_iter1_exitcond2_reg_2323 <= exitcond2_reg_2323;
        exitcond2_reg_2323 <= exitcond2_fu_1308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp2_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        ap_reg_pp2_iter1_g_state_addr_4_reg_2363 <= g_state_addr_4_reg_2363;
        ap_reg_pp2_iter1_i_state_addr_3_reg_2343 <= i_state_addr_3_reg_2343;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_reg_pp3_iter1_exitcond1_reg_2478 <= exitcond1_reg_2478;
        ap_reg_pp3_iter1_tmp_128_cast1_reg_2487[6 : 0] <= tmp_128_cast1_reg_2487[6 : 0];
        exitcond1_reg_2478 <= exitcond1_fu_1734_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'd0 == exitcond1_fu_1734_p2))) begin
        c_state_addr_reg_2492 <= tmp_128_cast1_fu_1763_p1;
        tmp_128_cast1_reg_2487[6 : 0] <= tmp_128_cast1_fu_1763_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        exitcond5_reg_2170 <= exitcond5_fu_864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten_reg_2224 <= exitcond_flatten_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp4_stage0_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond_reg_2560 <= exitcond_fu_1957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_fu_1030_p2))) begin
        f_state_addr_2_reg_2270 <= tmp_35_mid2_fu_1100_p1;
        g_state_addr_2_reg_2280 <= tmp_35_mid2_fu_1100_p1;
        i_cast_reg_2249[2 : 0] <= i_cast_fu_1108_p1[2 : 0];
        i_mid2_reg_2233 <= i_mid2_fu_1054_p3;
        i_state_addr_2_reg_2265 <= tmp_35_mid2_fu_1100_p1;
        o_state_addr_2_reg_2275 <= tmp_35_mid2_fu_1100_p1;
        tmp_39_cast1_mid2_v_reg_2239 <= tmp_39_cast1_mid2_v_fu_1080_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp2_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'd0 == exitcond2_reg_2323))) begin
        f_state_addr_4_reg_2353 <= tmp_40_fu_1332_p1;
        g_state_addr_4_reg_2363 <= tmp_40_fu_1332_p1;
        i_state_addr_3_reg_2343 <= tmp_40_fu_1332_p1;
        j_2_cast_reg_2332[2 : 0] <= j_2_cast_fu_1320_p1[2 : 0];
        o_state_addr_4_reg_2358 <= tmp_40_fu_1332_p1;
        tmp_37_reg_2338[2 : 0] <= tmp_37_fu_1324_p3[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten_reg_2224))) begin
        i_1_reg_2303 <= i_1_fu_1202_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'd0 == exitcond1_reg_2478))) begin
        icmp_reg_2518 <= icmp_fu_1843_p2;
        tmp_120_reg_2524 <= tmp_98_fu_1802_p2[32'd19];
        tmp_127_reg_2535 <= tmp_127_fu_1862_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_next_reg_2228 <= indvar_flatten_next_fu_1036_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        j_5_reg_2174 <= j_5_fu_870_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_9_reg_2327 <= j_9_fu_1314_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (exitcond5_reg_2170 == 1'd0))) begin
        j_cast_reg_2192[2 : 0] <= j_cast_fu_885_p1[2 : 0];
        tmp_26_reg_2202 <= tmp_26_fu_918_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp4_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        lstm_output_reg_2579 <= lstm_output_fu_1998_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp2_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'd0 == ap_reg_pp2_iter1_exitcond2_reg_2323))) begin
        lut_tanh_load_2_reg_2463 <= lut_tanh_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'd0 == exitcond1_reg_2478))) begin
        o_state_load_1_reg_2545 <= o_state_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond2_reg_2323))) begin
        tmp_109_reg_2425 <= {{tmp_108_fu_1555_p2[15:5]}};
        tmp_111_reg_2431 <= tmp_108_fu_1555_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_fu_835_p2 == 1'd1))) begin
        tmp_10_cast_reg_2162 <= tmp_10_cast_fu_860_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond5_fu_864_p2 == 1'd0))) begin
        tmp_10_reg_2179[2 : 0] <= tmp_10_fu_876_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp2_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'd0 == ap_reg_pp2_iter1_exitcond2_reg_2323))) begin
        tmp_113_reg_2468 <= tmp_113_fu_1650_p2;
        tmp_47_reg_2453 <= tmp_47_fu_1625_p2;
        tmp_75_reg_2442 <= tmp_41_fu_1592_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_14_reg_2217 <= tmp_14_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_fu_1030_p2))) begin
        tmp_35_mid2_v_reg_2244 <= tmp_35_mid2_v_fu_1092_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'd0 == exitcond_flatten_reg_2224))) begin
        tmp_39_cast1_mid2_reg_2285[4 : 0] <= tmp_39_cast1_mid2_fu_1147_p1[4 : 0];
        tmp_51_cast_reg_2291 <= tmp_51_cast_fu_1153_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'd0 == exitcond_flatten_reg_2224))) begin
        tmp_67_reg_2313 <= tmp_67_fu_1251_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp2_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'd0 == exitcond2_reg_2323))) begin
        tmp_78_reg_2368 <= tmp_65_fu_1355_p2[32'd15];
        tmp_80_reg_2379 <= tmp_80_fu_1388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp2_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'd0 == exitcond2_reg_2323))) begin
        tmp_91_reg_2394 <= tmp_87_fu_1451_p2[32'd15];
        tmp_97_reg_2405 <= tmp_97_fu_1484_p2;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond5_fu_864_p2)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten_fu_1030_p2)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond2_fu_1308_p2)) begin
        ap_condition_pp2_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond1_fu_1734_p2)) begin
        ap_condition_pp3_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp2_iter1) & (1'b0 == ap_enable_reg_pp2_iter0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp3_iter2) & (1'b0 == ap_enable_reg_pp3_iter1) & (1'b0 == ap_enable_reg_pp3_iter0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_enable_reg_pp4_iter0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_reg_2224))) begin
        ap_phi_mux_i_phi_fu_717_p4 = i_1_reg_2303;
    end else begin
        ap_phi_mux_i_phi_fu_717_p4 = i_reg_713;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_reg_2224))) begin
        ap_phi_mux_indvar_flatten_phi_fu_695_p4 = indvar_flatten_next_reg_2228;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_695_p4 = indvar_flatten_reg_691;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_reg_2224))) begin
        ap_phi_mux_j_1_phi_fu_706_p4 = tmp_35_mid2_v_reg_2244;
    end else begin
        ap_phi_mux_j_1_phi_fu_706_p4 = j_1_reg_702;
    end
end

always @ (*) begin
    if (((ap_block_pp2_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond2_reg_2323))) begin
        ap_phi_mux_j_2_phi_fu_728_p4 = j_9_reg_2327;
    end else begin
        ap_phi_mux_j_2_phi_fu_728_p4 = j_2_reg_724;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond5_reg_2170 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_683_p4 = j_5_reg_2174;
    end else begin
        ap_phi_mux_j_phi_fu_683_p4 = j_reg_679;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        c_state_ce0 = 1'b1;
    end else begin
        c_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        c_state_ce1 = 1'b1;
    end else begin
        c_state_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'd0 == exitcond1_reg_2478))) begin
        c_state_we1 = 1'b1;
    end else begin
        c_state_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp3_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        f_state_address0 = tmp_89_fu_1746_p1;
    end else if (((ap_block_pp2_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        f_state_address0 = f_state_addr_4_reg_2353;
    end else if (((ap_block_pp2_stage1 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        f_state_address0 = tmp_40_fu_1332_p1;
    end else if ((((ap_block_pp1_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp1_stage1 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0)))) begin
        f_state_address0 = f_state_addr_2_reg_2270;
    end else if (((ap_block_pp0_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        f_state_address0 = tmp_10_reg_2179;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        f_state_address0 = tmp_2_fu_796_p1;
    end else begin
        f_state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_block_pp2_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((ap_block_pp2_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((ap_block_pp1_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp1_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp0_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0)))) begin
        f_state_ce0 = 1'b1;
    end else begin
        f_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp2_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        f_state_d0 = storemerge2_cast_fu_1442_p1;
    end else if (((ap_block_pp1_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        f_state_d0 = tmp_59_fu_1224_p2;
    end else if (((ap_block_pp0_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        f_state_d0 = {{tmp_18_fu_2047_p2[30:15]}};
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        f_state_d0 = 16'd0;
    end else begin
        f_state_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_block_pp2_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == exitcond2_reg_2323)) | ((ap_block_pp1_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten_reg_2224)) | ((ap_block_pp0_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond5_reg_2170 == 1'd0)))) begin
        f_state_we0 = 1'b1;
    end else begin
        f_state_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp3_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        g_state_address0 = tmp_89_fu_1746_p1;
    end else if (((ap_block_pp2_stage2 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        g_state_address0 = ap_reg_pp2_iter1_g_state_addr_4_reg_2363;
    end else if (((ap_block_pp2_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        g_state_address0 = g_state_addr_4_reg_2363;
    end else if ((((ap_block_pp1_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp1_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        g_state_address0 = g_state_addr_2_reg_2280;
    end else if (((ap_block_pp0_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        g_state_address0 = tmp_10_reg_2179;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        g_state_address0 = tmp_6_fu_830_p1;
    end else begin
        g_state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_block_pp2_stage2_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((ap_block_pp2_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((ap_block_pp1_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        g_state_ce0 = 1'b1;
    end else begin
        g_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp2_stage2 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        g_state_d0 = storemerge4_cast_fu_1729_p1;
    end else if (((ap_block_pp1_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        g_state_d0 = tmp_72_fu_1301_p2;
    end else if (((ap_block_pp0_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        g_state_d0 = {{tmp_29_fu_2059_p2[30:15]}};
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        g_state_d0 = 16'd0;
    end else begin
        g_state_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_block_pp2_stage2_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'd0 == ap_reg_pp2_iter1_exitcond2_reg_2323)) | ((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_reg_2224)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond5_reg_2170 == 1'd0)))) begin
        g_state_we0 = 1'b1;
    end else begin
        g_state_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp4_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        h_state_address0 = tmp_138_cast1_fu_1982_p1;
    end else if (((ap_block_pp3_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter2))) begin
        h_state_address0 = ap_reg_pp3_iter1_tmp_128_cast1_reg_2487;
    end else if (((ap_block_pp1_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        h_state_address0 = tmp_34_cast_fu_1121_p1;
    end else begin
        h_state_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp4_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter2)) | ((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        h_state_ce0 = 1'b1;
    end else begin
        h_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter2) & (1'd0 == ap_reg_pp3_iter1_exitcond1_reg_2478))) begin
        h_state_we0 = 1'b1;
    end else begin
        h_state_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp3_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_state_address0 = tmp_89_fu_1746_p1;
    end else if (((ap_block_pp2_stage2 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        i_state_address0 = ap_reg_pp2_iter1_i_state_addr_3_reg_2343;
    end else if (((ap_block_pp2_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_state_address0 = i_state_addr_3_reg_2343;
    end else if (((ap_block_pp1_stage1 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        i_state_address0 = i_state_addr_2_reg_2265;
    end else if (((ap_block_pp1_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_state_address0 = tmp_35_mid2_fu_1100_p1;
    end else if (((ap_block_pp0_stage1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        i_state_address0 = tmp_10_reg_2179;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_state_address0 = tmp_fu_779_p1;
    end else begin
        i_state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_block_pp2_stage2_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_block_pp1_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        i_state_ce0 = 1'b1;
    end else begin
        i_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp2_stage2 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        i_state_d0 = storemerge_cast_fu_1692_p1;
    end else if (((ap_block_pp1_stage1 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        i_state_d0 = tmp_50_fu_1174_p2;
    end else if (((ap_block_pp0_stage1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        i_state_d0 = {{tmp_12_fu_2041_p2[30:15]}};
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_state_d0 = 16'd0;
    end else begin
        i_state_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_block_pp2_stage2_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'd0 == ap_reg_pp2_iter1_exitcond2_reg_2323)) | ((ap_block_pp1_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten_reg_2224)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_11001 == 1'b0) & (exitcond5_reg_2170 == 1'd0)))) begin
        i_state_we0 = 1'b1;
    end else begin
        i_state_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        lstm_out_ap_vld = 1'b1;
    end else begin
        lstm_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp2_stage1 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        lut_sigmoid_address0 = tmp_46_fu_1620_p1;
    end else if (((ap_block_pp2_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        lut_sigmoid_address0 = tmp_93_fu_1479_p1;
    end else if (((ap_block_pp2_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        lut_sigmoid_address0 = tmp_79_fu_1383_p1;
    end else begin
        lut_sigmoid_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_block_pp2_stage1 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        lut_sigmoid_address1 = tmp_49_fu_1645_p1;
    end else if (((ap_block_pp2_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        lut_sigmoid_address1 = tmp_101_fu_1504_p1;
    end else if (((ap_block_pp2_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        lut_sigmoid_address1 = tmp_82_fu_1408_p1;
    end else begin
        lut_sigmoid_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp2_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_block_pp2_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((ap_block_pp2_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0)))) begin
        lut_sigmoid_ce0 = 1'b1;
    end else begin
        lut_sigmoid_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_block_pp2_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_block_pp2_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((ap_block_pp2_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0)))) begin
        lut_sigmoid_ce1 = 1'b1;
    end else begin
        lut_sigmoid_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp3_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        lut_tanh_address0 = tmp_124_fu_1857_p1;
    end else if (((ap_block_pp2_stage1 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        lut_tanh_address0 = tmp_115_fu_1668_p1;
    end else if (((ap_block_pp2_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        lut_tanh_address0 = tmp_112_fu_1583_p1;
    end else begin
        lut_tanh_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_block_pp2_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        lut_tanh_ce0 = 1'b1;
    end else begin
        lut_tanh_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        lut_tanh_ce1 = 1'b1;
    end else begin
        lut_tanh_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp3_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        o_state_address0 = tmp_89_fu_1746_p1;
    end else if ((((ap_block_pp2_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((ap_block_pp2_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        o_state_address0 = o_state_addr_4_reg_2358;
    end else if ((((ap_block_pp1_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp1_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0)))) begin
        o_state_address0 = o_state_addr_2_reg_2275;
    end else if (((ap_block_pp0_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        o_state_address0 = tmp_10_reg_2179;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        o_state_address0 = tmp_4_fu_813_p1;
    end else begin
        o_state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_block_pp3_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_block_pp2_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_block_pp1_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp1_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp0_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter0)))) begin
        o_state_ce0 = 1'b1;
    end else begin
        o_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp2_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        o_state_d0 = storemerge3_cast_fu_1546_p1;
    end else if (((ap_block_pp1_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        o_state_d0 = tmp_66_fu_1273_p2;
    end else if (((ap_block_pp0_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        o_state_d0 = {{tmp_24_fu_2053_p2[30:15]}};
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        o_state_d0 = 16'd0;
    end else begin
        o_state_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond2_reg_2323)) | ((ap_block_pp1_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten_reg_2224)) | ((ap_block_pp0_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond5_reg_2170 == 1'd0)))) begin
        o_state_we0 = 1'b1;
    end else begin
        o_state_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp4_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        weight_Addr_A_orig = tmp_123_fu_1993_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_Addr_A_orig = 64'd145;
    end else if (((ap_block_pp2_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        weight_Addr_A_orig = tmp_38_fu_1522_p1;
    end else if (((ap_block_pp2_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_Addr_A_orig = tmp_106_fu_1514_p1;
    end else if (((ap_block_pp2_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_Addr_A_orig = tmp_85_fu_1418_p1;
    end else if (((ap_block_pp2_stage1 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        weight_Addr_A_orig = tmp_56_fu_1346_p1;
    end else if (((ap_block_pp1_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        weight_Addr_A_orig = tmp_68_fu_1280_p1;
    end else if (((ap_block_pp1_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        weight_Addr_A_orig = tmp_61_fu_1241_p1;
    end else if (((ap_block_pp1_stage1 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        weight_Addr_A_orig = tmp_54_fu_1197_p1;
    end else if (((ap_block_pp1_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        weight_Addr_A_orig = tmp_35_fu_1142_p1;
    end else if (((ap_block_pp0_stage3 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        weight_Addr_A_orig = tmp_27_fu_970_p1;
    end else if (((ap_block_pp0_stage2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        weight_Addr_A_orig = tmp_22_fu_947_p1;
    end else if (((ap_block_pp0_stage1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        weight_Addr_A_orig = tmp_16_fu_913_p1;
    end else if (((ap_block_pp0_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_Addr_A_orig = tmp_10_fu_876_p1;
    end else begin
        weight_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((ap_block_pp4_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_block_pp2_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((ap_block_pp2_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((ap_block_pp2_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_block_pp1_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp1_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp1_stage1_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_block_pp0_stage3_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage2_11001 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        weight_EN_A = 1'b1;
    end else begin
        weight_EN_A = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == tmp_1_fu_784_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == tmp_3_fu_801_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == tmp_5_fu_818_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_fu_835_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == exitcond5_fu_864_p2)) & (ap_block_pp0_stage0_subdone == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == exitcond5_fu_864_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((ap_block_pp0_stage2_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd1 == exitcond_flatten_fu_1030_p2)) & (ap_block_pp1_stage0_subdone == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_block_pp1_stage0_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd1 == exitcond_flatten_fu_1030_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((ap_block_pp1_stage1_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((ap_block_pp1_stage2_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((ap_block_pp1_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_block_pp2_stage0_subdone == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd1 == exitcond2_fu_1308_p2)) & (ap_block_pp2_stage0_subdone == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_block_pp2_stage0_subdone == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd1 == exitcond2_fu_1308_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((ap_block_pp2_stage1_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((~((ap_block_pp2_stage2_subdone == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage2)) & (ap_block_pp2_stage2_subdone == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else if (((ap_block_pp2_stage2_subdone == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((ap_block_pp2_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_block_pp3_stage0_subdone == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'd1 == exitcond1_fu_1734_p2)) & ~((ap_block_pp3_stage0_subdone == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter2)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_block_pp3_stage0_subdone == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter2)) | ((ap_block_pp3_stage0_subdone == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'd1 == exitcond1_fu_1734_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((ap_block_pp4_stage0_subdone == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_block_pp4_stage0_subdone == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign c_state_address0 = tmp_128_cast1_fu_1763_p1;

assign c_state_d1 = {{tmp_98_fu_1802_p2[19:4]}};

assign exitcond1_fu_1734_p2 = ((j_3_reg_736 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond2_fu_1308_p2 = ((ap_phi_mux_j_2_phi_fu_728_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond3_fu_1048_p2 = ((ap_phi_mux_i_phi_fu_717_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond5_fu_864_p2 = ((ap_phi_mux_j_phi_fu_683_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1030_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_695_p4 == 5'd25) ? 1'b1 : 1'b0);

assign exitcond_fu_1957_p2 = ((j_4_reg_747 == 3'd5) ? 1'b1 : 1'b0);

assign grp_fu_767_p2 = (12'd0 - lut_sigmoid_q1);

assign h_state_d0 = {{tmp_132_fu_2104_p2[27:12]}};

assign i_1_fu_1202_p2 = (3'd1 + i_mid2_reg_2233);

assign i_cast1_fu_1150_p1 = i_mid2_reg_2233;

assign i_cast2_fu_1112_p1 = i_mid2_fu_1054_p3;

assign i_cast_fu_1108_p1 = i_mid2_fu_1054_p3;

assign i_mid2_fu_1054_p3 = ((exitcond3_fu_1048_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_i_phi_fu_717_p4);

assign icmp_fu_1843_p2 = (($signed(tmp_119_fu_1833_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_1036_p2 = (ap_phi_mux_indvar_flatten_phi_fu_695_p4 + 5'd1);

assign indvarinc1_fu_790_p2 = (invdar1_reg_646 + 3'd1);

assign indvarinc2_fu_807_p2 = (invdar2_reg_657 + 3'd1);

assign indvarinc3_fu_824_p2 = (invdar3_reg_668 + 3'd1);

assign indvarinc_fu_773_p2 = (invdar_reg_635 + 3'd1);

assign j_1_cast_fu_1012_p1 = ap_phi_mux_j_1_phi_fu_706_p4;

assign j_1_cast_mid1_fu_1062_p1 = j_6_fu_1042_p2;

assign j_2_cast_fu_1320_p1 = j_2_reg_724;

assign j_4_cast_fu_1969_p1 = j_4_reg_747;

assign j_5_fu_870_p2 = (ap_phi_mux_j_phi_fu_683_p4 + 3'd1);

assign j_6_fu_1042_p2 = (3'd1 + ap_phi_mux_j_1_phi_fu_706_p4);

assign j_7_fu_1963_p2 = (3'd1 + j_4_reg_747);

assign j_8_fu_1740_p2 = (j_3_reg_736 + 3'd1);

assign j_9_fu_1314_p2 = (ap_phi_mux_j_2_phi_fu_728_p4 + 3'd1);

assign j_cast1_fu_881_p1 = j_reg_679;

assign j_cast_fu_885_p1 = j_reg_679;

assign lstm_out = lstm_output_reg_2579;

assign lstm_output_fu_1998_p1 = lstm_output_0_in_reg_758[15:0];

assign lut_tanh_address1 = tmp_130_fu_1878_p1;

assign lut_tanh_load_2_cast_fu_1697_p1 = lut_tanh_load_2_reg_2463;

assign lut_tanh_load_cast_fu_1883_p1 = lut_tanh_q0;

assign newSel1_fu_1925_p3 = ((icmp_reg_2518[0:0] === 1'b1) ? 14'd4096 : 14'd12288);

assign newSel2_fu_1932_p3 = ((or_cond_fu_1919_p2[0:0] === 1'b1) ? newSel_fu_1911_p3 : newSel1_fu_1925_p3);

assign newSel_fu_1911_p3 = ((sel_tmp9_fu_1907_p2[0:0] === 1'b1) ? tmp_136_cast_fu_1893_p1 : lut_tanh_load_cast_fu_1883_p1);

assign or_cond_fu_1919_p2 = (sel_tmp9_fu_1907_p2 | sel_tmp5_fu_1901_p2);

assign p_shl1_cast_fu_1002_p1 = tmp_11_fu_995_p3;

assign p_shl_fu_1016_p3 = {{ap_phi_mux_j_1_phi_fu_706_p4}, {2'd0}};

assign p_shl_mid1_fu_1066_p3 = {{j_6_fu_1042_p2}, {2'd0}};

assign sampleinput_16b_fu_850_p4 = {{tmp_9_fu_844_p2[18:3]}};

assign sel_tmp13_demorgan_fu_1897_p2 = (tmp_120_reg_2524 | icmp_reg_2518);

assign sel_tmp1_fu_1717_p2 = (tmp_113_reg_2468 & tmp_111_reg_2431);

assign sel_tmp2_fu_1680_p2 = (tmp_75_reg_2442 & tmp_47_reg_2453);

assign sel_tmp3_fu_1534_p2 = (tmp_97_reg_2405 & tmp_91_reg_2394);

assign sel_tmp4_fu_1423_p3 = ((tmp_78_reg_2368[0:0] === 1'b1) ? grp_fu_767_p2 : lut_sigmoid_q0);

assign sel_tmp5_fu_1901_p2 = (sel_tmp13_demorgan_fu_1897_p2 ^ 1'd1);

assign sel_tmp6_fu_1430_p2 = (tmp_80_reg_2379 & tmp_78_reg_2368);

assign sel_tmp7_fu_1710_p3 = ((tmp_111_reg_2431[0:0] === 1'b1) ? tmp_177_cast_fu_1706_p1 : lut_tanh_load_2_cast_fu_1697_p1);

assign sel_tmp8_fu_1527_p3 = ((tmp_91_reg_2394[0:0] === 1'b1) ? grp_fu_767_p2 : lut_sigmoid_q0);

assign sel_tmp9_fu_1907_p2 = (tmp_127_reg_2535 & tmp_120_reg_2524);

assign sel_tmp_fu_1673_p3 = ((tmp_75_reg_2442[0:0] === 1'b1) ? grp_fu_767_p2 : lut_sigmoid_q0);

assign storemerge2_cast_fu_1442_p1 = storemerge2_fu_1434_p3;

assign storemerge2_fu_1434_p3 = ((sel_tmp6_fu_1430_p2[0:0] === 1'b1) ? 12'd1 : sel_tmp4_fu_1423_p3);

assign storemerge3_cast_fu_1546_p1 = storemerge3_fu_1538_p3;

assign storemerge3_fu_1538_p3 = ((sel_tmp3_fu_1534_p2[0:0] === 1'b1) ? 12'd1 : sel_tmp8_fu_1527_p3);

assign storemerge4_cast_fu_1729_p1 = $signed(storemerge4_fu_1721_p3);

assign storemerge4_fu_1721_p3 = ((sel_tmp1_fu_1717_p2[0:0] === 1'b1) ? 14'd12288 : sel_tmp7_fu_1710_p3);

assign storemerge_cast_fu_1692_p1 = storemerge_fu_1684_p3;

assign storemerge_fu_1684_p3 = ((sel_tmp2_fu_1680_p2[0:0] === 1'b1) ? 12'd1 : sel_tmp_fu_1673_p3);

assign tmp1_fu_1126_p2 = ($signed(5'd20) + $signed(i_cast2_fu_1112_p1));

assign tmp26_cast_fu_1132_p1 = tmp1_fu_1126_p2;

assign tmp27_cast_fu_1187_p1 = tmp2_fu_1181_p2;

assign tmp2_fu_1181_p2 = ($signed(6'd45) + $signed(i_cast1_fu_1150_p1));

assign tmp3_fu_1231_p2 = ($signed(7'd70) + $signed(i_cast_reg_2249));

assign tmp4_fu_1246_p2 = ($signed(7'd95) + $signed(i_cast_reg_2249));

assign tmp_101_fu_1504_p1 = $unsigned(tmp_160_cast_fu_1500_p1);

assign tmp_103_fu_1829_p1 = $signed(tmp_117_fu_1819_p4);

assign tmp_105_fu_1509_p2 = ($signed(8'd135) + $signed(j_2_cast_reg_2332));

assign tmp_106_fu_1514_p1 = tmp_105_fu_1509_p2;

assign tmp_107_fu_1551_p1 = weight_Dout_A[15:0];

assign tmp_108_cast_fu_1631_p1 = $signed(tmp_43_fu_1598_p4);

assign tmp_108_fu_1555_p2 = ($signed(tmp_107_fu_1551_p1) + $signed(g_state_q0));

assign tmp_109_cast_fu_1641_p1 = $signed(tmp_48_fu_1635_p2);

assign tmp_109_fu_1561_p4 = {{tmp_108_fu_1555_p2[15:5]}};

assign tmp_10_cast_fu_860_p1 = $signed(sampleinput_16b_fu_850_p4);

assign tmp_10_fu_876_p1 = ap_phi_mux_j_phi_fu_683_p4;

assign tmp_110_fu_1571_p1 = $signed(tmp_109_fu_1561_p4);

assign tmp_112_fu_1583_p1 = $unsigned(tmp_110_fu_1571_p1);

assign tmp_113_fu_1650_p2 = ((tmp_109_reg_2425 == 11'd1024) ? 1'b1 : 1'b0);

assign tmp_114_fu_1658_p2 = ($signed(12'd0) - $signed(tmp_174_cast_fu_1655_p1));

assign tmp_115_fu_1668_p1 = $unsigned(tmp_175_cast_fu_1664_p1);

assign tmp_116_fu_1700_p2 = (13'd0 - lut_tanh_q0);

assign tmp_117_fu_1819_p4 = {{tmp_98_fu_1802_p2[19:5]}};

assign tmp_118_fu_1758_p2 = (tmp_89_cast_fu_1754_p1 + tmp_14_reg_2217);

assign tmp_119_fu_1833_p4 = {{tmp_98_fu_1802_p2[19:15]}};

assign tmp_11_fu_995_p3 = {{ch_ena}, {2'd0}};

assign tmp_120_cast_fu_1973_p1 = j_4_reg_747;

assign tmp_122_fu_1987_p2 = ($signed(8'd140) + $signed(j_4_cast_fu_1969_p1));

assign tmp_123_fu_1993_p1 = tmp_122_fu_1987_p2;

assign tmp_124_fu_1857_p1 = $unsigned(tmp_103_fu_1829_p1);

assign tmp_127_cast_fu_2023_p1 = $signed(tmp_137_fu_2014_p4);

assign tmp_127_fu_1862_p2 = (($signed(tmp_117_fu_1819_p4) > $signed(15'd31744)) ? 1'b1 : 1'b0);

assign tmp_128_cast1_fu_1763_p1 = tmp_118_fu_1758_p2;

assign tmp_128_cast_fu_2027_p1 = $signed(lstm_output_fu_1998_p1);

assign tmp_128_fu_1868_p2 = ($signed(16'd0) - $signed(tmp_103_fu_1829_p1));

assign tmp_129_cast_fu_2037_p1 = $signed(tmp_129_fu_2031_p2);

assign tmp_129_fu_2031_p2 = ($signed(tmp_127_cast_fu_2023_p1) + $signed(tmp_128_cast_fu_2027_p1));

assign tmp_12_fu_2041_p1 = tmp_10_cast_reg_2162;

assign tmp_130_fu_1878_p1 = $unsigned(tmp_134_cast_fu_1874_p1);

assign tmp_131_fu_1887_p2 = (13'd0 - lut_tanh_q1);

assign tmp_134_cast_fu_1874_p1 = $signed(tmp_128_fu_1868_p2);

assign tmp_135_fu_1977_p2 = (tmp_120_cast_fu_1973_p1 + tmp_14_reg_2217);

assign tmp_136_cast_fu_1893_p1 = $signed(tmp_131_fu_1887_p2);

assign tmp_136_fu_2006_p1 = weight_Dout_A[15:0];

assign tmp_137_fu_2014_p4 = {{tmp_126_fu_2111_p2[31:12]}};

assign tmp_138_cast1_fu_1982_p1 = tmp_135_fu_1977_p2;

assign tmp_144_cast_fu_1394_p1 = $signed(tmp_74_fu_1361_p4);

assign tmp_145_cast_fu_1404_p1 = $signed(tmp_81_fu_1398_p2);

assign tmp_14_fu_1006_p2 = (tmp_8_cast_fu_992_p1 + p_shl1_cast_fu_1002_p1);

assign tmp_159_cast_fu_1490_p1 = $signed(tmp_88_fu_1457_p4);

assign tmp_15_fu_907_p2 = (4'd5 + j_cast_fu_885_p1);

assign tmp_160_cast_fu_1500_p1 = $signed(tmp_99_fu_1494_p2);

assign tmp_16_fu_913_p1 = tmp_15_fu_907_p2;

assign tmp_174_cast_fu_1655_p1 = $signed(tmp_109_reg_2425);

assign tmp_175_cast_fu_1664_p1 = $signed(tmp_114_fu_1658_p2);

assign tmp_177_cast_fu_1706_p1 = $signed(tmp_116_fu_1700_p2);

assign tmp_17_fu_889_p1 = weight_Dout_A[15:0];

assign tmp_18_fu_2047_p1 = tmp_10_cast_reg_2162;

assign tmp_1_fu_784_p2 = ((invdar_reg_635 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_20_fu_924_p1 = weight_Dout_A[15:0];

assign tmp_21_fu_942_p2 = ($signed(4'd10) + $signed(j_cast_reg_2192));

assign tmp_22_fu_947_p1 = tmp_21_fu_942_p2;

assign tmp_23_fu_952_p1 = weight_Dout_A[15:0];

assign tmp_24_fu_2053_p1 = tmp_10_cast_reg_2162;

assign tmp_26_fu_918_p2 = (5'd15 + j_cast1_fu_881_p1);

assign tmp_27_fu_970_p1 = tmp_26_reg_2202;

assign tmp_28_fu_974_p1 = weight_Dout_A[15:0];

assign tmp_29_fu_2059_p1 = tmp_10_cast_reg_2162;

assign tmp_2_fu_796_p1 = invdar1_reg_646;

assign tmp_31_fu_1024_p2 = (j_1_cast_fu_1012_p1 + p_shl_fu_1016_p3);

assign tmp_33_fu_1116_p2 = (tmp_14_reg_2217 + i_cast_fu_1108_p1);

assign tmp_34_cast_fu_1121_p1 = tmp_33_fu_1116_p2;

assign tmp_34_fu_1136_p2 = (tmp_39_cast_mid2_fu_1088_p1 + tmp26_cast_fu_1132_p1);

assign tmp_34_mid1_fu_1074_p2 = (j_1_cast_mid1_fu_1062_p1 + p_shl_mid1_fu_1066_p3);

assign tmp_35_fu_1142_p1 = tmp_34_fu_1136_p2;

assign tmp_35_mid2_fu_1100_p1 = tmp_35_mid2_v_fu_1092_p3;

assign tmp_35_mid2_v_fu_1092_p3 = ((exitcond3_fu_1048_p2[0:0] === 1'b1) ? j_6_fu_1042_p2 : ap_phi_mux_j_1_phi_fu_706_p4);

assign tmp_37_fu_1324_p3 = {{1'd1}, {j_2_reg_724}};

assign tmp_38_fu_1522_p1 = $unsigned(tmp_41_cast_fu_1519_p1);

assign tmp_39_cast1_mid2_fu_1147_p1 = tmp_39_cast1_mid2_v_reg_2239;

assign tmp_39_cast1_mid2_v_fu_1080_p3 = ((exitcond3_fu_1048_p2[0:0] === 1'b1) ? tmp_34_mid1_fu_1074_p2 : tmp_31_fu_1024_p2);

assign tmp_39_cast_mid2_fu_1088_p1 = tmp_39_cast1_mid2_v_fu_1080_p3;

assign tmp_39_fu_1157_p1 = weight_Dout_A[15:0];

assign tmp_3_fu_801_p2 = ((invdar1_reg_646 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_40_fu_1332_p1 = j_2_reg_724;

assign tmp_41_cast_fu_1519_p1 = $signed(tmp_37_reg_2338);

assign tmp_41_fu_1592_p2 = ($signed(tmp_73_fu_1588_p1) + $signed(i_state_q0));

assign tmp_43_fu_1598_p4 = {{tmp_41_fu_1592_p2[15:5]}};

assign tmp_44_fu_1608_p1 = $signed(tmp_43_fu_1598_p4);

assign tmp_45_fu_1165_p4 = {{tmp_42_fu_2065_p2[27:12]}};

assign tmp_46_fu_1620_p1 = $unsigned(tmp_44_fu_1608_p1);

assign tmp_47_fu_1625_p2 = ((tmp_43_fu_1598_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign tmp_48_fu_1635_p2 = ($signed(12'd0) - $signed(tmp_108_cast_fu_1631_p1));

assign tmp_49_fu_1645_p1 = $unsigned(tmp_109_cast_fu_1641_p1);

assign tmp_4_fu_813_p1 = invdar2_reg_657;

assign tmp_50_fu_1174_p2 = ($signed(tmp_45_fu_1165_p4) + $signed(i_state_q0));

assign tmp_51_cast_fu_1153_p1 = h_state_q0;

assign tmp_52_fu_1340_p2 = (8'd125 + j_2_cast_fu_1320_p1);

assign tmp_53_fu_1191_p2 = (tmp_39_cast1_mid2_fu_1147_p1 + tmp27_cast_fu_1187_p1);

assign tmp_54_fu_1197_p1 = tmp_53_fu_1191_p2;

assign tmp_55_fu_1207_p1 = weight_Dout_A[15:0];

assign tmp_56_fu_1346_p1 = tmp_52_fu_1340_p2;

assign tmp_57_fu_2072_p1 = tmp_51_cast_reg_2291;

assign tmp_58_fu_1215_p4 = {{tmp_57_fu_2072_p2[27:12]}};

assign tmp_59_fu_1224_p2 = ($signed(tmp_58_fu_1215_p4) + $signed(f_state_q0));

assign tmp_5_fu_818_p2 = ((invdar2_reg_657 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_60_fu_1236_p2 = (tmp_39_cast1_mid2_reg_2285 + tmp3_fu_1231_p2);

assign tmp_61_fu_1241_p1 = tmp_60_fu_1236_p2;

assign tmp_62_fu_1256_p1 = weight_Dout_A[15:0];

assign tmp_63_fu_2078_p1 = tmp_51_cast_reg_2291;

assign tmp_64_fu_1264_p4 = {{tmp_63_fu_2078_p2[27:12]}};

assign tmp_65_fu_1355_p2 = ($signed(tmp_76_fu_1351_p1) + $signed(f_state_q0));

assign tmp_66_fu_1273_p2 = (tmp_64_fu_1264_p4 + o_state_q0);

assign tmp_67_fu_1251_p2 = (tmp_39_cast1_mid2_reg_2285 + tmp4_fu_1246_p2);

assign tmp_68_fu_1280_p1 = tmp_67_reg_2313;

assign tmp_69_fu_1284_p1 = weight_Dout_A[15:0];

assign tmp_6_fu_830_p1 = invdar3_reg_668;

assign tmp_70_fu_2084_p1 = tmp_51_cast_reg_2291;

assign tmp_71_fu_1292_p4 = {{tmp_70_fu_2084_p2[27:12]}};

assign tmp_72_fu_1301_p2 = ($signed(tmp_71_fu_1292_p4) + $signed(g_state_q0));

assign tmp_73_fu_1588_p1 = weight_Dout_A[15:0];

assign tmp_74_fu_1361_p4 = {{tmp_65_fu_1355_p2[15:5]}};

assign tmp_76_fu_1351_p1 = weight_Dout_A[15:0];

assign tmp_77_fu_1371_p1 = $signed(tmp_74_fu_1361_p4);

assign tmp_79_fu_1383_p1 = $unsigned(tmp_77_fu_1371_p1);

assign tmp_7_fu_835_p2 = ((invdar3_reg_668 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_80_fu_1388_p2 = ((tmp_74_fu_1361_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign tmp_81_fu_1398_p2 = ($signed(12'd0) - $signed(tmp_144_cast_fu_1394_p1));

assign tmp_82_fu_1408_p1 = $unsigned(tmp_145_cast_fu_1404_p1);

assign tmp_84_fu_1413_p2 = ($signed(8'd130) + $signed(j_2_cast_reg_2332));

assign tmp_85_fu_1418_p1 = tmp_84_fu_1413_p2;

assign tmp_86_fu_1447_p1 = weight_Dout_A[15:0];

assign tmp_87_fu_1451_p2 = (tmp_86_fu_1447_p1 + o_state_q0);

assign tmp_88_fu_1457_p4 = {{tmp_87_fu_1451_p2[15:5]}};

assign tmp_89_cast_fu_1754_p1 = j_3_reg_736;

assign tmp_89_fu_1746_p1 = j_3_reg_736;

assign tmp_8_cast_fu_992_p1 = ch_ena;

assign tmp_8_fu_841_p1 = sampleinput[18:0];

assign tmp_90_fu_1467_p1 = $signed(tmp_88_fu_1457_p4);

assign tmp_93_cast_fu_1776_p4 = {{tmp_92_fu_2090_p2[27:8]}};

assign tmp_93_fu_1479_p1 = $unsigned(tmp_90_fu_1467_p1);

assign tmp_97_cast_fu_1793_p4 = {{tmp_96_fu_2097_p2[31:12]}};

assign tmp_97_fu_1484_p2 = ((tmp_88_fu_1457_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign tmp_98_fu_1802_p2 = (tmp_93_cast_fu_1776_p4 + tmp_97_cast_fu_1793_p4);

assign tmp_99_fu_1494_p2 = ($signed(12'd0) - $signed(tmp_159_cast_fu_1490_p1));

assign tmp_9_fu_844_p2 = (19'd120000 + tmp_8_fu_841_p1);

assign tmp_fu_779_p1 = invdar_reg_635;

assign weight_Addr_A = weight_Addr_A_orig << 32'd2;

assign weight_Clk_A = ap_clk;

assign weight_Din_A = 32'd0;

assign weight_Rst_A = ap_rst;

assign weight_WEN_A = 4'd0;

always @ (posedge ap_clk) begin
    tmp_10_reg_2179[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_cast_reg_2192[3] <= 1'b0;
    i_cast_reg_2249[6:3] <= 4'b0000;
    tmp_39_cast1_mid2_reg_2285[6:5] <= 2'b00;
    j_2_cast_reg_2332[7:3] <= 5'b00000;
    tmp_37_reg_2338[3] <= 1'b1;
    tmp_128_cast1_reg_2487[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    ap_reg_pp3_iter1_tmp_128_cast1_reg_2487[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //lstm_n5_16s_16b
